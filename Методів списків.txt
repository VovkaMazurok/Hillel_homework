Ось список основних методів для роботи зі списками в Python:

my_list = []

1. append(x) — додає елемент x до кінця списку.

lst.append(5)


2. extend(iterable) — додає всі елементи ітерабельного об'єкта до кінця списку.

lst.extend([6, 7])


3. insert(i, x) — вставляє елемент x на позицію з індексом i.

lst.insert(2, 'new')


4. remove(x) — видаляє перший елемент у списку зі значенням x. Викликає помилку, якщо елемент не знайдено.

lst.remove(3)


5. pop([i]) — видаляє і повертає елемент за індексом i. Якщо індекс не вказаний, видаляє і повертає останній елемент.

lst.pop()  # видаляє останній елемент
lst.pop(1)  # видаляє елемент за індексом 1


6. clear() — видаляє всі елементи зі списку.

lst.clear()


7. index(x[, start[, end]]) — повертає індекс першої появи елемента x. Можна вказати діапазон пошуку
 за допомогою параметрів start і end.

lst.index(5)


8. count(x) — повертає кількість входжень елемента x у список.

lst.count(2)


9. sort(key=None, reverse=False) — сортує список на місці. Можна використовувати параметри key для кастомної функції сортування та reverse для сортування у зворотному порядку.

lst.sort()
lst.sort(reverse=True)


10. reverse() — змінює порядок елементів у списку на зворотний.

lst.reverse()


11. copy() — повертає копію списку.

new_lst = lst.copy()



Додаткові операції зі списками:

len(lst) — повертає кількість елементів у списку.

max(lst) — повертає максимальний елемент у списку.

min(lst) — повертає мінімальний елемент у списку.

sum(lst) — повертає суму елементів у списку (якщо це числа).

sorted(lst, key=None, reverse=False) — повертає новий відсортований список (без зміни оригінального).


Це основні методи та функції, які використовуються для роботи зі списками в Python.

